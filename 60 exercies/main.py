# 1- Write a Python program to calculate the length of a string using 2 ways :


# string = input('Enter your First string : ')
# print(len(string))
# counter = 0
# for i in range(len(string)):
#     counter += 1
# print(counter)

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 2-Write a Python program to get a string made of the first 2 and last 2 characters of a given string. If the string length is less than 2, return the empty string instead ("##Sample String : 'w3resource'
# Expected Result : 'w3ce'
# ##Sample String : 'w3'
# Expected Result : 'w3w3'
# ##Sample String : ' w'
# Expected Result : Empty String)

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# def check_string(s):
#     if len(s) < 2:
#         return ''
#     else:
#         print(s[:2], s[-2:], sep='')
#
# check_string('w3resource')
# check_string('w3w3')
# check_string('w')

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# 3-Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing', add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged. (Sample String : 'abc'
# Expected Result : 'abcing')

# def check_string(s):
#     if len(s) < 3:
#         print(s)
#     elif s[-3:] == 'ing':
#         print(s+"ly")
#     else:
#         print(s + "ing")
# check_string('abc')

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 4-Write a Python function that takes a list of words and return the longest word and the length of the longest one(Longest word: Exercises Length of the longest word : 9)


# def longest_word(s):
#     max_word = ''
#     word_size = 0
#     for word in range(len(s)):
#         if s[word] > max_word:
#             max_word = s[word]
#             word_size = len(s[word])
#     print(max_word)
#     print(word_size)
# longest_word(['Ahmed','Khaled','Youssef Khaled Ahmed','Abdelrhman Nashaat'])

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 5-Write a Python program to change a given string to a newly string where the first and last chars have been exchanged using 2 ways (Sample String:abca  Expected Result:ebce)

# string = input('Enter your First string : ')
# print(string[-1], string[1:-1], string[0], sep='')

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 6-Write a Python program to remove characters that have odd index values in a given string (Sample String:abca Expected Result:ac)

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# string = input('Enter your First string : ')
# for character in range(0, len(string), 2):
#     print(string[character],end='')

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 7-Write a Python program to count the occurrences of each word in a given sentence (Sample String:amr and ahmed are frindes but amr is the tallest Expected Result:2)

# sentence = input('Enter Your sentence : ')
# words = sentence.split()
# unWords = set(words)
# for i in unWords:
#     print(sentence.count(i), " : ", i)

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 8-Write a Python script that takes input from the user and displays that input back in upper and lower cases


# sentence = input('Enter Your sentence : ')
# if sentence.islower():
#     print(sentence.upper())
# else:
#     print(sentence.lower())


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 9-Write a Python function to reverse a string if its length is a multiple of 4

# def length_check(s):
#     if len(s) % 4 == 0:
#         return s[::-1]
#     else:
#         return s
# print(length_check('Abdelrhmannn'))

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 10-Write a Python program to remove a newline in Python

# string = input('Input Your String : ')
# print(string.rstrip())

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 11-Write a Python program to check whether a string starts with specified characters

# string = input('Input Your String : ')
# specified_characters = input('Enter The specified characters : ')
# print(string.startswith(specified_characters))

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 12-Write a Python program to add prefix text to all of the lines in a string


# l = ['aaaaaaaaaaaaaaaa','bbbbbbbbbbbbbbbb','ccccccccccccccccccc','dddddddddddddddddddddd','eeeeeeeeeeeeeeeeeeeee','fffffffffffffffffffffffff']
# prefix_text = input('Enter The prefix text : ')
# for i in range(len(l)):
#     print(prefix_text)
#     print(l[i])

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 13-Write a Python program to print the following numbers up to 2 decimal places


# n = float(input('Input Your Decimal Number : '))
# print("{:.2f}".format(n))

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 15-Write a Python program to display a number with a comma separator

#
# n = int(input('Input a Number : '))
# print("{:,}".format(n))


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 16- Write a Python program to reverse a string using 2 ways

# first way :

# string = input('Input Your String : ')
# print(string[::-1])

# second way :

# string = input('Input Your String : ')
# reversed_str = ""
# for i in range(len(string) - 1, -1, -1):
#     reversed_str += string[i]
# print(reversed_str)


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 17-Write a Python program to count repeated characters in a string (hint:use dictionary)


# string = input('Input Your String : ')
# char = []
# for i in string:
#     char.append(i)
# eachChar = set(char)
# for i in eachChar:
#     if(string.count(i) > 1):
#         print(i, ':', string.count(i))

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 18-Write a Python program to find the first non-repeating character in a given string


# def find_first_non_repeating_char(s):
#     char_count = {}
#
#     for char in s:
#         if char in char_count:
#             char_count[char] += 1
#         else:
#             char_count[char] = 1
#
#     for char in s:
#         if char_count[char] == 1:
#             return char
# print(find_first_non_repeating_char('ahhmmeedd'))


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 19-Write a Python program to remove spaces from a given string


# s = input('Input a Sentence : ')
# print(s.replace(' ', ''))

# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 20- Write a Python program to count the number of non-empty substrings of a given string

# s = 'Ahmed'
# n = len(s)
# count = 0
#
# for i in range(n):
#     for j in range(i, n):
#         count += 1
#         print('substring : ', s[i] + s[j])
# print(count)


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 21-write a Python program to swap first and last element of any list


# l = [1, 2, 3, 4, 5, 6]
# temp = l[0]
# l[0] = l[len(l) - 1]
# l[len(l) - 1] = temp
# print(l)


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 22-Given a list in Python and provided the positions of the elements, write a program to swap the two elements in the list. (Input : List = [23, 65, 19, 90], pos1 = 1, pos2 = 3
# Output : [19, 65, 23, 90])]


# l = [23, 65, 19, 90]
# pos1 = int(input('First Position : '))
# pos2 = int(input('Second Position : '))
# temp = l[pos1]
# l[pos1] = l[pos2]
# l[pos2] = temp
# print(l)


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 23-search for the all ways to know the length of the list

# done


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

# 24-write a Python code to find the Maximum number of list of numbers


# l = [2, 6, 12, 100, 10, 20, 60]
# max = 0
# for num in l :
#     if num > max:
#         max = num
# print(max)


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# 25-write a Python code to find the Minimum number of list of numbers.


# l = [2, 6, 12, 100, 10, 20, 60]
# min = l[0]
# for num in l:
#     if num < min:
#         min = num
# print(min)


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# 26-search for if an elem is existing in list

# l = ['Ahmed', 'Abdelrhman', 'Khaled', 'Youssef']
# print(l.__contains__('Abdelrhman'))



# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# 27-clear python list using different ways

# done


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# 28-remove duplicated elements from a list


# l = [1,1,2,2,23,4,4,5,6,8,9,9]
# s = set(l)
# print(s)


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# 29-Given list values and keys list, convert these values to key value pairs in form of list of dictionaries. (Input : test_list = [“Gfg”, 3, “is”, 8], key_list = [“name”, “id”]
# Output : [{‘name’: ‘Gfg’, ‘id’: 3}, {‘name’: ‘is’, ‘id’: 8}])


# test_list = ['Gfg', 3, 'is', 8]
# key_list = ['name', 'id']
# n = len(test_list)
# res = []
# for idx in range(0, n, 2):
#     res.append({key_list[0]: test_list[idx], key_list[1] : test_list[idx + 1]})
# print(res)


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# 30-write a python program to count unique values inside a list using different ways



# l = [1, 2, 2, 3, 4, 4, 4, 5]
# s = set(l)
# print(s)


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# 31-write a python program Extract all elements with Frequency greater than K (Input : test_list = [4, 6, 4, 3, 3, 4, 3, 4, 3, 8], K = 3
# Output : [4, 3] )


# test_list = [4, 6, 4, 3, 3, 4, 3, 4, 3, 8]
# K = 3
# newList = []
# for i in test_list:
#     if test_list.count(i) >= K and i not in newList:
#         newList.append(i)
# print(newList)


# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------


# 32-write a python program to find the Strongest Neighbour (Input: 1 2 2 3 4 5 Output: 2 2 3 4 5)



# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
# -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------